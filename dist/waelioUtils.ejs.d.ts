import { _cleanResponse } from './clean_response';
import { _equals } from './equals';
import { _hideRandom } from './hide_random';
import { _repeat } from './repeat';
import { _rotateArray } from './rotate_array';
import { _to } from './to';
import { _To } from './_To';
import { a_or_an } from './a_or_an';
import { Base64 } from './base64';
import { toBase64 } from './toBase64';
import { calculateClockDrift } from './calculate_clock_drift';
import { camelToSnake } from './camel_to_snake';
import { _formatErrors } from './format_errors';
import { generateId } from './generate_id';
import { isArray } from './is_array';
import { isObject } from './is_object';
import { jsonToQueryString } from './json_to_query_string';
import { meta } from './meta';
import { notifyMe } from './notify_me';
import { _parseErrors } from './parse_errors';
import { queryStringToJson } from './query_string_to_json';
import { reParseString } from './re_parse_string';
import { resetString } from './reset_string';
import { snakeToCamel } from './snake_to_camel';
import { sniffId } from './sniff_id';
import { _encrypt } from './encrypt';
import { _decrypt } from './decrypt';
declare const waelioUtils: {
    _cleanResponse: (response: any) => any;
    _formatErrors: (err: any) => {};
    _equals: (array: any[], needle: any[]) => boolean;
    _hideRandom: (array: any[], difficulty?: number | undefined, replacement?: string | undefined) => any[];
    _parseErrors: (err: any) => any;
    _repeat: (num: number) => (fn: any) => void;
    _rotateArray: (array: string | number[]) => false | never[];
    _to: (promise: Promise<any>) => Promise<unknown>;
    _To: (promise: Promise<any>) => Promise<unknown>;
    a_or_an: (field: string) => "an" | "a";
    Base64: (payload: string) => string;
    toBase64: (payload: string) => string;
    calculateClockDrift: (iatAccessToken: number, iatIdToken: number) => number;
    camelToSnake: (payload: string, hyphenated?: boolean | undefined) => string;
    generateId: (start?: number | undefined, len?: number | undefined) => string;
    isArray: (payload: any) => boolean;
    isObject: (payload: any) => boolean;
    jsonToQueryString: (payload: {
        string: any;
    }) => string;
    meta: () => {
        meta: {};
    };
    notifyMe: (notification: string | {
        string: any;
    }, Site?: string | undefined) => void;
    queryStringToJson: (payload: string | {
        string: any;
    }, toObject?: boolean | undefined) => any;
    reParseString: (payload: string) => any;
    resetString: (payload: string) => string;
    snakeToCamel: (payload: string) => string;
    sniffId: (payload: any) => any;
    _encrypt: (salt: any, payload: any) => any;
    _decrypt: (salt: string | undefined, payload: any, asFunction?: boolean | undefined) => any;
};
export { _cleanResponse, _formatErrors, _equals, _hideRandom, _parseErrors, _repeat, _rotateArray, _to, _To, a_or_an, Base64, toBase64, calculateClockDrift, camelToSnake, generateId, isArray, isObject, jsonToQueryString, meta, notifyMe, queryStringToJson, reParseString, resetString, snakeToCamel, sniffId, _encrypt, _decrypt, waelioUtils };
