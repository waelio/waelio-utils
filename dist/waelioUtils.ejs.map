{"version":3,"file":"waelioUtils.ejs","sources":["../src/utils/clean_response.ts","../src/utils/equals.ts","../src/utils/hide_random.ts","../src/utils/repeat.ts","../src/utils/rotate_array.ts","../src/utils/to.ts","../src/utils/a_or_an.ts","../src/utils/base64.ts","../src/utils/calculate_clock_drift.ts","../src/utils/camel_to_snake.ts","../src/utils/format_errors.ts","../src/utils/generate_id.ts","../src/utils/is_array.ts","../src/utils/is_object.ts","../src/utils/json_to_query_string.ts","../src/utils/meta.ts","../src/utils/notify_me.ts","../src/utils/parse_errors.ts","../src/utils/query_string_to_json.ts","../src/utils/re_parse_string.ts","../src/utils/reset_string.ts","../src/utils/snake_to_camel.ts","../src/utils/sniff_id.ts","../src/utils/encrypt.ts","../src/utils/decrypt.ts","../main.ts"],"sourcesContent":["// @ts-nocheck\r\nimport { get } from 'lodash';\r\n\r\nconst reParseString = (payload: string) => (payload ? JSON.parse(JSON.stringify(payload)) : payload);\r\nconst _cleanResponse = (response) => {\r\n  const data = get(response, 'data');\r\n  return !!data ? reParseString(data) : response;\r\n};\r\nexport { _cleanResponse };\r\n","/**\r\n * Compare two arrays of equal size\r\n * @param {array} array\r\n * @param {array} needle\r\n * @returns {boolean}\r\n *\r\n * @author Wael Wahbeh\r\n */\r\nconst _equals = (array: any[], needle: any[]): boolean => {\r\n  // if the array or needle are a falsy value, return\r\n  if (!array || !needle) return false;\r\n  // compare lengths - can save a lot of time\r\n  if (needle.length != array.length) return false;\r\n\r\n  for (let i = 0, l = needle.length; i < l; i++) {\r\n    // Check if we have nested arrays\r\n    if (Array.isArray(needle[i]) && Array.isArray(needle[i])) {\r\n      // recurse into the nested arrays\r\n      return _equals( array[i], needle[i]);\r\n\r\n    } else if (needle[i] !== array[i]) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nexport { _equals };\r\n\r\n\r\n_equals([1,2,3],[1,2,3, 4])","/**\r\n * @param  {array} array\r\n * @param  {number} difficulty=3\r\n * @param  {string} replacement=''\r\n */\r\nconst _hideRandom = (array: Array<any>, difficulty: number = 3, replacement: string = '') => {\r\n  for (let i = 0; i < array.length; ++i) {\r\n    for (let k = 0; k < difficulty; ++k) {\r\n      const randomColumnIndex = Math.floor(Math.random() * array.length);\r\n      array[i][randomColumnIndex] = replacement;\r\n    }\r\n  }\r\n  return array;\r\n};\r\nexport { _hideRandom };\r\n","/**\r\n * Repeat a function n number of time\r\n * @param {number} num - How many times a function must run\r\n * @param {function} fn - The function to repeat\r\n * @returns {void}\r\n * @author Wael Wahbeh\r\n */\r\nconst _repeat = (num: number) => (fn: any) => {\r\n  if (num > 0) {\r\n    fn();\r\n    _repeat(num - 1)(fn);\r\n  }\r\n};\r\nexport { _repeat }\r\n","// @ts-nocheck\r\n\r\n/**\r\n * Rotates array counter clock\r\n * @param  {array} array\r\n */\r\nconst _rotateArray = (array: string | number[]) => {\r\n  if (!array || !array.length) return false;\r\n\r\n  // Calculate the width and height of the Array\r\n  let w: number = array.length || 0;\r\n  let h: number = Array.isArray(array[0]) ? array[0].length : 0;\r\n\r\n  // In case it is a zero matrix, no transpose needed.\r\n  if (h === 0 || w === 0) {\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * @type {number} i Counter\r\n   * @type {number} j Counter\r\n   * @type {Array<number>} t Transposed data is stored in this array.\r\n   */\r\n  let i,\r\n    j,\r\n    t = [];\r\n\r\n  // Loop through every item in the outer array (height)\r\n  for (i = 0; i < h; i++) {\r\n    // Insert a new row (array)\r\n    t[i] = [];\r\n\r\n    // Loop through every item per item in outer array (width)\r\n    for (j = 0; j < w; j++) {\r\n      // Save transposed data.\r\n      t[i][j] = array[j][i];\r\n    }\r\n  }\r\n\r\n  return t;\r\n};\r\nexport { _rotateArray };\r\n","import { _cleanResponse } from './clean_response';\r\nconst _to = (promise: Promise<any>) => {\r\n  return promise.then((result) => _cleanResponse(result)).catch((err) => [err, null]);\r\n};\r\nexport { _to };\r\n","const a_or_an = function a_or_an(field: string) {\r\n  return /[aeiou]/.test(field.charAt(0)) ? 'an' : 'a';\r\n};\r\nexport { a_or_an };\r\n","/**\r\n * Converts string to a Base64\r\n * @param  {string} payload\r\n * @returns {string}\r\n */\r\nfunction Base64(payload: string) {\r\n  return btoa(unescape(encodeURIComponent(payload)));\r\n}\r\nexport { Base64 };\r\n","/**\r\n * Calculate Clock Drift used to calculate tile remaining before token expiration\r\n *\r\n * @param  {} iatAccessToken IAT\r\n * @param  {} iatIdToken\r\n */\r\nconst calculateClockDrift = (iatAccessToken: number, iatIdToken: number) => {\r\n  const now = Math.floor(Date.now() / 1000);\r\n  const iat = Math.min(iatAccessToken, iatIdToken);\r\n  return now - iat;\r\n};\r\nexport { calculateClockDrift };\r\n","/**\r\n * Function that converts camelCase to snake_case or snake-case \"snake-case\"\r\n * Example IN: snakeCase\r\n * Example Out: snake-case\r\n * Example Out: snake_case\r\n * @name  camelToSnake\r\n * @param {string} payload\r\n * @param {boolean} hyphenated controls the delimiter: true = \"-\" / false = \"_\"\r\n * @returns {string}\r\n */\r\nconst camelToSnake = (payload: string, hyphenated: boolean = false): string => {\r\n  return payload && payload[0].toLowerCase() + payload.slice(1, payload.length).replace(/[A-Z]/g, (letter) => `${hyphenated ? `-` : `_`}${letter.toLowerCase()}`);\r\n};\r\nexport { camelToSnake };\r\n","// @ts-nocheck\r\n\r\nimport { get } from 'lodash';\r\n\r\nconst _formatErrors = (err) => {\r\n  var errors = {};\r\n  get(err, 'inner', []).forEach((err) => {\r\n    if (get(err, 'path') && get(err, 'message')) {\r\n      errors[err.path] = err.message;\r\n    }\r\n  });\r\n  return errors;\r\n};\r\nexport { _formatErrors };\r\n","/** generate random string\r\n * @name  generateId\r\n * @author  Wael Wahbeh <wahbehw@gmail.com>\r\n * @param  {number} start 2 default\r\n * @param  {number} len   9 default\r\n * @return {string}\r\n */\r\nconst generateId = (start = 2, len = 9): string => {\r\n  return Math.random().toString(36).substr(start, len);\r\n};\r\nexport { generateId };\r\n","/**\r\nTest isArray\r\n*/\r\nconst isArray = (payload: any): boolean => {\r\n  return Array.isArray(payload);\r\n};\r\nexport { isArray };\r\n","\r\nconst isObject = (payload: any): boolean => {\r\n  return payload === Object(payload) && !Array.isArray(payload) && typeof payload !== 'function';\r\n};\r\nexport { isObject };\r\n","// @ts-nocheck\r\n\r\n/**\r\n * Function that converts a JSON to URL Query String\r\n * Example IN: {\"first\":\"John\", \"last\": \"Smith\"}\r\n * Example Out: first=John&last=Smith\r\n * @name  jsonToQueryString\r\n * @author  Wael Wahbeh <wahbehw@gmail.com>\r\n * @function\r\n * @global\r\n * @param {} -JSON payload\r\n * @returns QueryString\r\n */\r\nconst jsonToQueryString = (payload: { string }): string => {\r\n  return Object.keys(payload)\r\n    .map((key) => `${encodeURIComponent(key)}=${encodeURIComponent(payload[key])}`)\r\n    .join('&');\r\n};\r\nexport { jsonToQueryString };\r\n","// @ts-nocheck\r\n\r\nconst meta = () => {\r\n  const metaObj = { meta: {} };\r\n\r\n  if (typeof this === 'undefined') return metaObj;\r\n  if (typeof this['metaTags'] === 'undefined') return metaObj;\r\n\r\n  if (this.metaTags.title) {\r\n    // console.log('adding title')\r\n    metaObj.title = this.metaTags.title;\r\n    metaObj.meta.ogTitle = { name: 'og:title', content: this.metaTags.title };\r\n    metaObj.meta.twitterTitle = {\r\n      name: 'twitter:title',\r\n      content: this.metaTags.title\r\n    };\r\n  }\r\n  if (this.metaTags.description) {\r\n    // console.log('adding desc')\r\n    metaObj.meta.description = {\r\n      name: 'description',\r\n      content: this.metaTags.description\r\n    };\r\n    metaObj.meta.ogDescription = {\r\n      name: 'og:description',\r\n      content: this.metaTags.description\r\n    };\r\n    metaObj.meta.twitterDescription = {\r\n      name: 'twitter:description',\r\n      content: this.metaTags.description\r\n    };\r\n  }\r\n  if (this.metaTags.url) {\r\n    // console.log('adding url')\r\n    metaObj.meta.ogUrl = { name: 'og:url', content: this.metaTags.url };\r\n    metaObj.meta.twitterUrl = {\r\n      name: 'twitter:url',\r\n      content: this.metaTags.url\r\n    };\r\n    metaObj.meta.canonical = { rel: 'canonical', href: this.metaTags.url };\r\n  }\r\n  if (this.metaTags.image) {\r\n    // console.log('adding image')\r\n    metaObj.meta.ogImage = { name: 'og:image', content: this.metaTags.image };\r\n    metaObj.meta.twitterImage = {\r\n      name: 'twitter:image',\r\n      content: this.metaTags.image\r\n    };\r\n  }\r\n  return metaObj;\r\n};\r\nexport { meta };\r\n","// @ts-nocheck\r\n\r\n/** PWA Notification\r\n * Send Notification to Site\r\n * Browser only\r\n * @param  {string} notification -Message to send\r\n * @param  {string} Site -Website name\r\n */\r\nconst notifyMe = (notification: string | { string }, Site = 'NorthWestMeta.com!'): void => {\r\n  document.addEventListener('DOMContentLoaded', () => {\r\n    if ('Notification' in window) {\r\n      if (Notification.permission === 'granted') {\r\n        const payload = {\r\n          detail: `Welcome to ${Site}`,\r\n          bubbles: true,\r\n          cancelable: true\r\n        };\r\n        return new Notification(notification || payload);\r\n      } else if (Notification.permission !== 'denied') {\r\n        Notification.requestPermission().then(function (permission) {\r\n          if (permission === 'granted') {\r\n            return new Notification(notification || `Welcome to ${Site}`);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  });\r\n};\r\nexport { notifyMe };\r\n","// @ts-nocheck\r\n\r\nimport { map, get } from 'lodash';\r\n\r\nconst _parseErrors = (err: any) => {\r\n  if (err && err.name) {\r\n    return err.message || err.name;\r\n  } else {\r\n    return map(get(err, 'errors', []), (err) => err.message.replace('Path ', '').replace('`', '').replace('`', '')).join('<br>');\r\n  }\r\n};\r\nexport { _parseErrors };\r\n","// @ts-nocheck\r\n\r\n/**\r\n * Function that converts a URL Query String to JSON\r\n * Example Out: {\"first\":\"John\", \"last\": \"Smith\"}\r\n * @name  queryStringToJson\r\n * @author  Wael Wahbeh <wahbehw@gmail.com>\r\n * @function\r\n * @global\r\n * @param {string} payload QueryString\r\n * @param {boolean} toObject Return JS Object or JSON\r\n * @returns JSON|Object\r\n */\r\nconst queryStringToJson = (payload: string | { string }, toObject: boolean = true) => {\r\n  if (!payload) return;\r\n  var pairs = payload.slice(1).split('&');\r\n  var result = {};\r\n  pairs.forEach((pair) => {\r\n    pair = pair.split('=');\r\n    result[pair[0]] = decodeURIComponent(pair[1] || '');\r\n  });\r\n  return toObject ? JSON.parse(JSON.stringify(result)) : JSON.stringify(result);\r\n};\r\nexport { queryStringToJson };\r\n","const reParseString = (payload: string) => {\r\n  return JSON.parse(JSON.stringify(payload));\r\n};\r\nexport { reParseString };\r\n","/** Decode uri component\r\n * @name  resetString\r\n * @author  Wael Wahbeh <wahbehw@gmail.com>\r\n * @function\r\n * @global\r\n * @param {string} payload\r\n */\r\nconst resetString = (payload: string): string => {\r\n  return decodeURIComponent(decodeURIComponent(encodeURIComponent(payload)));\r\n};\r\nexport { resetString };\r\n","/**\r\n * Function that converts snake_case or snake-case to camelCase \"snakeCase\"\r\n * Example IN: snake_case\r\n * Example Out: snakeCase\r\n * @name  snakeToCamel\r\n * @author  Wael Wahbeh <wahbehw@gmail.com>\r\n * @function\r\n * @global\r\n * @param {string} payload QueryString\r\n * @returns {string}\r\n */\r\nconst snakeToCamel = (payload: string): string => {\r\n  return typeof payload !== 'string' ? payload : payload.replace(/([-_]\\w)/g, (g) => g[1].toUpperCase());\r\n};\r\nexport { snakeToCamel };\r\n","/**\r\n * @param  {object} payload\r\n * @returns string||boolean||number\r\n */\r\nconst sniffId = (payload: any) => {\r\n  const { id, _id, Id, iD } = payload;\r\n  const newId = id || _id || Id || iD;\r\n  return newId || false;\r\n};\r\nexport { sniffId };\r\n","const isObject = (payload: any): boolean => {\r\n  return payload === Object(payload) && !Array.isArray(payload) && typeof payload !== 'function';\r\n};\r\nconst isArray = (payload: any): boolean => {\r\n  return Array.isArray(payload);\r\n};\r\nconst isFunction = (functionToCheck): boolean => typeof functionToCheck === 'function';\r\nconst isValid = (payload): boolean => isObject(payload) || isArray(payload) || (typeof payload === 'string' && payload.trim().length > 0);\r\nconst _encrypt = (salt, text) => {\r\n  if (isValid(salt) && isValid(text)) {\r\n    switch (true) {\r\n      case isObject(text):\r\n        text = JSON.stringify(text);\r\n        break;\r\n      case isArray(text):\r\n        text = JSON.stringify(text);\r\n        break;\r\n      case isFunction(text):\r\n        text = text.toString();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    const textToChars = (text) => text.split('').map((c) => c.charCodeAt(0));\r\n    const byteHex = (n) => ('0' + Number(n).toString(16)).substr(-2);\r\n    const applySaltToChar = (code) => textToChars(salt).reduce((a, b) => a ^ b, code);\r\n\r\n    return text.split('').map(textToChars).map(applySaltToChar).map(byteHex).join('');\r\n  }\r\n  throw 'Invalid salt or payload!';\r\n  return 'null';\r\n};\r\n\r\nexport { _encrypt };\r\n","const isObject = (payload: any): boolean => {\r\n  return payload === Object(payload) && !Array.isArray(payload) && typeof payload !== 'function';\r\n};\r\nconst isArray = (payload: any): boolean => {\r\n  return Array.isArray(payload);\r\n};\r\nconst isValid = (payload): boolean => isObject(payload) || isArray(payload) || (typeof payload === 'string' && payload.trim().length > 0);\r\n\r\nconst _decrypt = (salt, encoded) => {\r\n  if (isValid(encoded)) {\r\n    const textToChars = (text) => text.split('').map((c) => c.charCodeAt(0));\r\n    const applySaltToChar = (code) => textToChars(salt).reduce((a, b) => a ^ b, code);\r\n    return encoded\r\n      .match(/.{1,2}/g)\r\n      .map((hex) => parseInt(hex, 16))\r\n      .map(applySaltToChar)\r\n      .map((charCode) => String.fromCharCode(charCode))\r\n      .join('');\r\n  }\r\n    throw 'Invalid salt or encoded!';\r\n    return 'null';\r\n};\r\n\r\nexport { _decrypt };\r\n","import {\r\n  _cleanResponse,\r\n  _formatErrors,\r\n  _equals,\r\n  _hideRandom,\r\n  _parseErrors,\r\n  _repeat,\r\n  _rotateArray,\r\n  _to,\r\n  _To,\r\n  a_or_an,\r\n  Base64,\r\n  toBase64,\r\n  calculateClockDrift,\r\n  camelToSnake,\r\n  generateId,\r\n  isArray,\r\n  isObject,\r\n  jsonToQueryString,\r\n  meta,\r\n  notifyMe,\r\n  queryStringToJson,\r\n  reParseString,\r\n  resetString,\r\n  snakeToCamel,\r\n  sniffId,\r\n  _encrypt,\r\n  _decrypt\r\n} from './src/utils';\r\n\r\nconst waelioUtils = {\r\n  _cleanResponse,\r\n  _formatErrors,\r\n  _equals,\r\n  _hideRandom,\r\n  _parseErrors,\r\n  _repeat,\r\n  _rotateArray,\r\n  _to,\r\n  _To,\r\n  a_or_an,\r\n  Base64,\r\n  toBase64,\r\n  calculateClockDrift,\r\n  camelToSnake,\r\n  generateId,\r\n  isArray,\r\n  isObject,\r\n  jsonToQueryString,\r\n  meta,\r\n  notifyMe,\r\n  queryStringToJson,\r\n  reParseString,\r\n  resetString,\r\n  snakeToCamel,\r\n  sniffId,\r\n    _encrypt,\r\n  _decrypt\r\n};\r\n\r\nexport { _cleanResponse };\r\nexport { _formatErrors };\r\nexport { _equals };\r\nexport { _hideRandom };\r\nexport { _parseErrors };\r\nexport { _repeat };\r\nexport { _rotateArray };\r\nexport { _to };\r\nexport { _To };\r\nexport { a_or_an };\r\nexport { Base64 };\r\nexport { toBase64 };\r\nexport { calculateClockDrift }; \r\nexport { camelToSnake };\r\nexport { _formatErrors as formatErrors };\r\nexport { generateId };\r\nexport { isArray };\r\nexport { isObject };\r\nexport { jsonToQueryString };\r\nexport { meta };\r\nexport { notifyMe };\r\nexport { _parseErrors as parseErrors };\r\nexport { queryStringToJson };\r\nexport { reParseString };\r\nexport { resetString };\r\nexport { snakeToCamel };\r\nexport { sniffId };\r\nexport { _encrypt };\r\nexport { _decrypt };\r\nexport { waelioUtils }"],"names":["reParseString","isArray","isObject","this","isValid","_To","toBase64"],"mappings":"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"}