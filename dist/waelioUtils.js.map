{"version":3,"file":"waelioUtils.js","sources":["../src/utils/equals.ts","../main.ts"],"sourcesContent":["/**\r\n * Compare two arrays of equal size\r\n * @param {array} array\r\n * @param {array} needle\r\n * @returns {boolean}\r\n *\r\n * @author Wael Wahbeh\r\n */\r\nconst _equals = (array: any[], needle: any[]): boolean => {\r\n  // if the array or needle are a falsy value, return\r\n  if (!array || !needle) return false;\r\n  // compare lengths - can save a lot of time\r\n  if (needle.length != array.length) return false;\r\n\r\n  for (let i = 0, l = needle.length; i < l; i++) {\r\n    // Check if we have nested arrays\r\n    if (Array.isArray(needle[i]) && Array.isArray(needle[i])) {\r\n      // recurse into the nested arrays\r\n      return _equals( array[i], needle[i]);\r\n\r\n    } else if (needle[i] !== array[i]) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nexport { _equals };\r\n\r\n\r\n_equals([1,2,3],[1,2,3, 4])","import {\r\n  _cleanResponse,\r\n  _formatErrors,\r\n  _equals,\r\n  _hideRandom,\r\n  _parseErrors,\r\n  _repeat,\r\n  _rotateArray,\r\n  _to,\r\n  _To,\r\n  a_or_an,\r\n  Base64,\r\n  toBase64,\r\n  calculateClockDrift,\r\n  camelToSnake,\r\n  generateId,\r\n  isArray,\r\n  isObject,\r\n  jsonToQueryString,\r\n  meta,\r\n  notifyMe,\r\n  queryStringToJson,\r\n  reParseString,\r\n  resetString,\r\n  snakeToCamel,\r\n  sniffId,\r\n  _encrypt,\r\n  _decrypt\r\n} from './src/utils';\r\n\r\n// const waelioUtils = {\r\n//   _cleanResponse,\r\n//   _formatErrors,\r\n//   _equals,\r\n//   _hideRandom,\r\n//   _parseErrors,\r\n//   _repeat,\r\n//   _rotateArray,\r\n//   _to,\r\n//   _To,\r\n//   a_or_an,\r\n//   Base64,\r\n//   toBase64,\r\n//   calculateClockDrift,\r\n//   camelToSnake,\r\n//   generateId,\r\n//   isArray,\r\n//   isObject,\r\n//   jsonToQueryString,\r\n//   meta,\r\n//   notifyMe,\r\n//   queryStringToJson,\r\n//   reParseString,\r\n//   resetString,\r\n//   snakeToCamel,\r\n//   sniffId,\r\n//     _encrypt,\r\n//   _decrypt\r\n// };\r\nexport default function waelioUtils() {\r\n  _cleanResponse;\r\n  _formatErrors;\r\n  _equals;\r\n  _hideRandom;\r\n  _parseErrors;\r\n  _repeat;\r\n  _rotateArray;\r\n  _to;\r\n  _To;\r\n  a_or_an;\r\n  Base64;\r\n  toBase64;\r\n  calculateClockDrift;\r\n  camelToSnake;\r\n  _formatErrors;\r\n  generateId;\r\n  isArray;\r\n  isObject;\r\n  jsonToQueryString;\r\n  meta;\r\n  notifyMe;\r\n  _parseErrors;\r\n  queryStringToJson;\r\n  reParseString;\r\n  resetString;\r\n  snakeToCamel;\r\n  sniffId;\r\n  _encrypt;\r\n  _decrypt;\r\n}\r\n"],"names":[],"mappings":";;;;;;EAAA;;;;;;;;EAQA,MAAM,OAAO,GAAG,CAAC,KAAY,EAAE,MAAa;;MAE1C,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM;UAAE,OAAO,KAAK,CAAC;;MAEpC,IAAI,MAAM,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM;UAAE,OAAO,KAAK,CAAC;MAEhD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;;UAE7C,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;;cAExD,OAAO,OAAO,CAAE,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;WAEtC;eAAM,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,EAAE;cACjC,OAAO,KAAK,CAAC;WACd;OACF;MAED,OAAO,IAAI,CAAC;EACd,CAAC,CAAC;EAKF,OAAO,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;ECD3B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;WACwB,WAAW;EA8BnC;;;;;;;;;;"}