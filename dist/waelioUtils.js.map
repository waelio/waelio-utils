{"version":3,"file":"waelioUtils.js","sources":["../src/utils/is_array.ts","../src/utils/is_object.ts","../src/utils/_get.ts","../src/utils/clean_response.ts","../src/utils/equals.ts","../src/utils/hide_random.ts","../src/utils/repeat.ts","../src/utils/rotate_array.ts","../src/utils/to.ts","../src/utils/a_or_an.ts","../src/utils/base64.ts","../src/utils/toBase64.ts","../src/utils/calculate_clock_drift.ts","../src/utils/camel_to_snake.ts","../src/utils/generate_id.ts","../src/utils/is_function.ts","../src/utils/is_string.ts","../src/utils/is_number.ts","../src/utils/is_valid.ts","../src/utils/json_to_query_string.ts","../src/utils/meta.ts","../src/utils/notify_me.ts","../src/utils/query_string_to_json.ts","../src/utils/re_parse_string.ts","../src/utils/reset_string.ts","../src/utils/snake_to_camel.ts","../src/utils/sniff_id.ts","../src/utils/encrypt.ts","../src/utils/decrypt.ts","../src/waelioUtils.ts"],"sourcesContent":["\nexport const isArray = (payload: any): boolean => {\n  return Array.isArray(payload);\n};\n","import { isArray } from \"./is_array\";\n\nexport const isObject = (payload: any): boolean => {\n  return payload === Object(payload) && !isArray(payload) && typeof payload !== 'function';\n};\n","import { isObject } from './is_object';\nimport { isArray } from './is_array';\n\nexport const _Get = (data) => {\n  switch (true) {\n    case !data:\n      return false;\n    case isObject(data):\n      return data.data ? data.data : data;\n    case isArray(data.data):\n      if (data.data.length === 0) return data.data.data;\n      else if (data.data.length === 1) return data.data.data[0];\n      else if (data.data.length > 1) return data.data;\n    case isArray(data):\n      if (data.length === 0) return data;\n      else if (data.length === 1) return data[0].data;\n      else if (data.length > 1) return data;\n    default:\n      return data;\n  }\n  return data;\n};\n","import { _Get } from './_get';\nexport const _cleanResponse = (response) => _Get(response) || response;\n","/**\n * Compare two arrays of equal size\n * @param {array} array\n * @param {array} needle\n * @returns {boolean}\n *\n * @author Wael Wahbeh\n */\nexport const _equals = (array: any[], needle: any[]): boolean => {\n  // if the array or needle are a falsy value, return\n  if (!array || !needle) return false;\n  // compare lengths - can save a lot of time\n  if (needle.length != array.length) return false;\n\n  for (let i = 0, l = needle.length; i < l; i++) {\n    // Check if we have nested arrays\n    if (Array.isArray(needle[i]) && Array.isArray(needle[i])) {\n      // recurse into the nested arrays\n      return _equals( array[i], needle[i]);\n\n    } else if (needle[i] !== array[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","/**\n * @param  {array} array\n * @param  {number} difficulty=3\n * @param  {string} replacement=''\n */\nexport const _hideRandom = (array: Array<any>, difficulty: number = 3, replacement: string = '') => {\n  for (let i = 0; i < array.length; ++i) {\n    for (let k = 0; k < difficulty; ++k) {\n      const randomColumnIndex = Math.floor(Math.random() * array.length);\n      array[i][randomColumnIndex] = replacement;\n    }\n  }\n  return array;\n};\n\n","/**\n * Repeat a function n number of time\n * @param {number} num - How many times a function must run\n * @param {function} fn - The function to repeat\n * @returns {void}\n * @author Wael Wahbeh\n */\nexport const _repeat = (num: number) => (fn: any) => {\n  if (num > 0) {\n    fn();\n    _repeat(num - 1)(fn);\n  }\n};\n\n","// @ts-nocheck\n\n/**\n * Rotates array counter clock\n * @param  {array} array\n */\nexport const _rotateArray = (array: string | number[]) => {\n  if (!array || !array.length) return false;\n\n  // Calculate the width and height of the Array\n  let w: number = array.length || 0;\n  let h: number = Array.isArray(array[0]) ? array[0].length : 0;\n\n  // In case it is a zero matrix, no transpose needed.\n  if (h === 0 || w === 0) {\n    return [];\n  }\n\n  /**\n   * @type {number} i Counter\n   * @type {number} j Counter\n   * @type {Array<number>} t Transposed data is stored in this array.\n   */\n  let i,\n    j,\n    t = [];\n\n  // Loop through every item in the outer array (height)\n  for (i = 0; i < h; i++) {\n    // Insert a new row (array)\n    t[i] = [];\n\n    // Loop through every item per item in outer array (width)\n    for (j = 0; j < w; j++) {\n      // Save transposed data.\n      t[i][j] = array[j][i];\n    }\n  }\n\n  return t;\n};\n\n","import { _Get } from './_get';\nexport const _to = (promise: Promise<any>) => {\n  return new Promise((resolve, reject) => {\n    return Promise.resolve(promise)\n      .then((result) => resolve([null, _Get(result)]))\n      .catch((err) => reject([err, null]));\n  });\n};\nexport const _To = _to;\n","export const a_or_an = function (field: string) {\n  return /[aeiou]/.test(field.charAt(0)) ? 'an' : 'a';\n};\n","/**\n * Converts string to a Base64\n * @param  {string} payload\n * @returns {string}\n */\nexport const Base64 = function (payload: string) {\n  return btoa(unescape(encodeURIComponent(payload)));\n}\n","/**\n * Converts string to a Base64\n * @param  {string} payload\n * @returns {string}\n */\nexport const toBase64 = function (payload: string) {\n  return btoa(unescape(encodeURIComponent(payload)));\n}\n","/**\n * Calculate Clock Drift used to calculate tile remaining before token expiration\n *\n * @param  {} iatAccessToken IAT\n * @param  {} iatIdToken\n */\nexport const calculateClockDrift = (iatAccessToken: number, iatIdToken: number) => {\n  const now = Math.floor(Date.now() / 1000);\n  const iat = Math.min(iatAccessToken, iatIdToken);\n  return now - iat;\n};\n","/**\n * Function that converts camelCase to snake_case or snake-case \"snake-case\"\n * Example IN: snakeCase\n * Example Out: snake-case\n * Example Out: snake_case\n * @name  camelToSnake\n * @param {string} payload\n * @param {boolean} hyphenated controls the delimiter: true = \"-\" / false = \"_\"\n * @returns {string}\n */\nexport const camelToSnake = (payload: string, hyphenated: boolean = false): string => {\n  return payload && payload[0].toLowerCase() + payload.slice(1, payload.length).replace(/[A-Z]/g, (letter) => `${hyphenated ? `-` : `_`}${letter.toLowerCase()}`);\n};\n\n","/** generate random string\n * @name  generateId\n * @author  Wael Wahbeh <wahbehw@gmail.com>\n * @param  {number} start 2 default\n * @param  {number} len   9 default\n * @return {string}\n */\nexport const generateId = (start = 2, len = 9): string => {\n  return Math.random().toString(36).substr(start, len);\n};\n\n","export const isFunction = (payload) => payload && {}.toString.call(payload) === '[object Function]' && typeof payload === 'function'","export const isString = (payload) => !!payload && typeof payload === 'string' && payload.trim().length > 0\n","import { isString } from './is_string'\n\nexport const isNumber = (payload):boolean => !isString(payload) && !isNaN(parseFloat(payload)) && isFinite(payload);\n","import { isObject } from './is_object'\nimport { isArray } from './is_array'\nimport { isString } from'./is_string'\nimport { isNumber } from './is_number';\n\n\nexport const isValid = (payload): boolean => isObject(payload) || isArray(payload) || isString(payload) || isNumber(payload)\n","// @ts-nocheck\n\n/**\n * Function that converts a JSON to URL Query String\n * Example IN: {\"first\":\"John\", \"last\": \"Smith\"}\n * Example Out: first=John&last=Smith\n * @name  jsonToQueryString\n * @author  Wael Wahbeh <wahbehw@gmail.com>\n * @function\n * @global\n * @param {} -JSON payload\n * @returns QueryString\n */\nexport const jsonToQueryString = (payload: { string }): string => {\n  return Object.keys(payload)\n    .map((key) => `${encodeURIComponent(key)}=${encodeURIComponent(payload[key])}`)\n    .join('&');\n};\n","// @ts-nocheck\n\nexport const meta = () => {\n  const metaObj = { meta: {} };\n\n  if (typeof this === 'undefined') return metaObj;\n  if (typeof this['metaTags'] === 'undefined') return metaObj;\n\n  if (this.metaTags.title) {\n    // console.log('adding title')\n    metaObj.title = this.metaTags.title;\n    metaObj.meta.ogTitle = { name: 'og:title', content: this.metaTags.title };\n    metaObj.meta.twitterTitle = {\n      name: 'twitter:title',\n      content: this.metaTags.title\n    };\n  }\n  if (this.metaTags.description) {\n    // console.log('adding desc')\n    metaObj.meta.description = {\n      name: 'description',\n      content: this.metaTags.description\n    };\n    metaObj.meta.ogDescription = {\n      name: 'og:description',\n      content: this.metaTags.description\n    };\n    metaObj.meta.twitterDescription = {\n      name: 'twitter:description',\n      content: this.metaTags.description\n    };\n  }\n  if (this.metaTags.url) {\n    // console.log('adding url')\n    metaObj.meta.ogUrl = { name: 'og:url', content: this.metaTags.url };\n    metaObj.meta.twitterUrl = {\n      name: 'twitter:url',\n      content: this.metaTags.url\n    };\n    metaObj.meta.canonical = { rel: 'canonical', href: this.metaTags.url };\n  }\n  if (this.metaTags.image) {\n    // console.log('adding image')\n    metaObj.meta.ogImage = { name: 'og:image', content: this.metaTags.image };\n    metaObj.meta.twitterImage = {\n      name: 'twitter:image',\n      content: this.metaTags.image\n    };\n  }\n  return metaObj;\n};\n\n","// @ts-nocheck\n\n/** PWA Notification\n * Send Notification to Site\n * Browser only\n * @param  {string} notification -Message to send\n * @param  {string} Site -Website name\n */\nexport const notifyMe = (notification: string | { string }, Site = 'NorthWestMeta.com!'): void => {\n  document.addEventListener('DOMContentLoaded', () => {\n    if ('Notification' in window) {\n      if (Notification.permission === 'granted') {\n        const payload = {\n          detail: `Welcome to ${Site}`,\n          bubbles: true,\n          cancelable: true\n        };\n        return new Notification(notification || payload);\n      } else if (Notification.permission !== 'denied') {\n        Notification.requestPermission().then(function (permission) {\n          if (permission === 'granted') {\n            return new Notification(notification || `Welcome to ${Site}`);\n          }\n        });\n      }\n    }\n  });\n};\n\n","// @ts-nocheck\n\n/**\n * Function that converts a URL Query String to JSON\n * Example Out: {\"first\":\"John\", \"last\": \"Smith\"}\n * @name  queryStringToJson\n * @author  Wael Wahbeh <wahbehw@gmail.com>\n * @function\n * @global\n * @param {string} payload QueryString\n * @param {boolean} toObject Return JS Object or JSON\n * @returns JSON|Object\n */\nexport const queryStringToJson = (payload: string | { string }, toObject: boolean = true) => {\n  if (!payload) return;\n  var pairs = payload.slice(1).split('&');\n  var result = {};\n  pairs.forEach((pair) => {\n    pair = pair.split('=');\n    result[pair[0]] = decodeURIComponent(pair[1] || '');\n  });\n  return toObject ? JSON.parse(JSON.stringify(result)) : JSON.stringify(result);\n};\n","export const reParseString = (payload: string) => {\n  return JSON.parse(JSON.stringify(payload));\n};\n\n","/** Decode uri component\n * @name  resetString\n * @author  Wael Wahbeh <wahbehw@gmail.com>\n * @function\n * @global\n * @param {string} payload\n */\nexport const resetString = (payload: string): string => {\n  return decodeURIComponent(decodeURIComponent(encodeURIComponent(payload)));\n};\n\n","/**\n * Function that converts snake_case or snake-case to camelCase \"snakeCase\"\n * Example IN: snake_case\n * Example Out: snakeCase\n * @name  snakeToCamel\n * @author  Wael Wahbeh <wahbehw@gmail.com>\n * @function\n * @global\n * @param {string} payload QueryString\n * @returns {string}\n */\nexport const snakeToCamel = (payload: string): string => {\n  return typeof payload !== 'string' ? payload : payload.replace(/([-_]\\w)/g, (g) => g[1].toUpperCase());\n};\n","/**\n * @param  {object} payload\n * @returns string||boolean||number\n */\nexport const sniffId = (payload: any) => {\n  const { id, _id, Id, iD } = payload;\n  const newId = id || _id || Id || iD;\n  return newId || false;\n};\n\n","import { _decrypt } from './decrypt'\nimport { isValid } from './is_valid';\nimport { isObject } from './is_object';\nimport { isArray } from './is_array';\nimport { isFunction } from './is_function';\n\nexport const _encrypt = (salt , payload) => {\n  if (!payload && !!salt) {\n    payload = salt;\n    salt = 'salt';\n  }\n  if ( isValid(salt) && ( isValid(payload) || isFunction(payload) )  )   {\n    switch (true) {\n      case isObject(payload) /*?*/:\n        payload = JSON.stringify(payload);\n        break;\n      case isArray(payload) /*?*/:\n        payload = JSON.stringify(payload);\n        break;\n      case isFunction(payload) /*?*/:\n        payload = payload.toString();\n        // payload = new Function('return ' + fString)();\n        break;\n      default:\n        payload = payload.toString();\n        break;\n    }\n    const textToChars = (payload) => payload.split('').map((c) => c.charCodeAt(0)); /*?*/\n    const byteHex = (n) => ('0' + Number(n).toString(16)).substr(-2); /*?*/\n    const applySaltToChar = (code) => textToChars(salt).reduce((a, b) => a ^ b, code); /*?*/\n    return payload.split('').map(textToChars).map(applySaltToChar).map(byteHex).join('');\n  }\n  throw 'Invalid salt or payload!';\n  return 'payload';\n};\n","import { isValid } from './is_valid';\n\nexport const _decrypt = (salt = 'salt', payload, asFunction = false) => {\n  if (!payload && !!salt) {\n    payload = salt;\n    salt = 'salt';\n  }\n  if (isValid(salt) && isValid(payload)) {\n    const textToChars = (text) => text.split('').map((c) => c.charCodeAt(0));\n    const applySaltToChar = (code) => textToChars(salt).reduce((a, b) => a ^ b, code);\n    const decryptString = payload\n      .match(/.{1,2}/g)\n      .map((hex) => parseInt(hex, 16))\n      .map(applySaltToChar)\n      .map((charCode) => String.fromCharCode(charCode))\n      .join('');\n    if(!asFunction) \n      return decryptString\n    else {\n      return new Function('return ' + decryptString)();\n    }       \n  }\n  throw 'Invalid salt or payload!';\n  return payload;\n};\n","import {\n  _cleanResponse,\n  _equals,\n  _hideRandom,\n  _repeat,\n  _rotateArray,\n  _to,\n  _To,\n  _Get,\n  a_or_an,\n  Base64,\n  toBase64,\n  calculateClockDrift,\n  camelToSnake,\n  generateId,\n  isArray,\n  isObject,\n  isFunction,\n  isString,\n  isValid,\n  isNumber,\n  jsonToQueryString,\n  meta,\n  notifyMe,\n  queryStringToJson,\n  reParseString,\n  resetString,\n  snakeToCamel,\n  sniffId,\n  _encrypt,\n  _decrypt\n} from './utils/index';\n\nconst waelioUtils = {\n  _cleanResponse,\n  _equals,\n  _hideRandom,\n  _repeat,\n  _rotateArray,\n  _to,\n  _To,\n  _Get,\n  a_or_an,\n  Base64,\n  toBase64,\n  calculateClockDrift,\n  camelToSnake,\n  generateId,\n  isArray,\n  isObject,\n  isFunction,\n  isString,\n  isValid,\n  isNumber,\n  jsonToQueryString,\n  meta,\n  notifyMe,\n  queryStringToJson,\n  reParseString,\n  resetString,\n  snakeToCamel,\n  sniffId,\n  _encrypt,\n  _decrypt\n};\nexport default waelioUtils;\n\nexport { _cleanResponse };\nexport { _equals };\nexport { _hideRandom };\nexport { _repeat };\nexport { _rotateArray };\nexport { _to };\nexport { _To };\nexport { _Get };\nexport { a_or_an };\nexport { Base64 };\nexport { toBase64 };\nexport { calculateClockDrift };\nexport { camelToSnake };\nexport { generateId };\nexport { isArray };\nexport { isObject };\nexport { isFunction };\nexport { isString };\nexport { isValid };\nexport { isNumber };\nexport { jsonToQueryString };\nexport { meta };\nexport { notifyMe };\nexport { queryStringToJson };\nexport { reParseString };\nexport { resetString };\nexport { snakeToCamel };\nexport { sniffId };\nexport { _encrypt };\nexport { _decrypt };\nexport { waelioUtils };\n"],"names":["this"],"mappings":"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"}